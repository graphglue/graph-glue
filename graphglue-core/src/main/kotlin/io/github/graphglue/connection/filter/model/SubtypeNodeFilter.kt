package io.github.graphglue.connection.filter.model

import io.github.graphglue.connection.filter.definition.SubtypeNodeFilterDefinition
import org.neo4j.cypherdsl.core.Condition
import org.neo4j.cypherdsl.core.Node

/**
 * Filter entry for a specific subtype for a node
 * Creates a combined condition of the type and the condition generated by [filter]
 *
 * @param subtypeFilterDefinition associated definition of the filter
 * @param filter the actual filter
 */
class SubtypeNodeFilter(
    private val subtypeFilterDefinition: SubtypeNodeFilterDefinition, private val filter: Filter
) : FilterEntry(subtypeFilterDefinition) {
    override fun generateCondition(node: Node): Condition {
        val nodeDefinition = subtypeFilterDefinition.nodeDefinition
        val labels = nodeDefinition.persistentEntity.staticLabels
        return node.hasLabels(*labels.toTypedArray()).and(filter.generateCondition(node))
    }
}